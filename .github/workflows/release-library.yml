name: Release Library
# Job will only run on push to the main branch after the test job has passed

on:
  push:
    branches: ['main']
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'assets/**'
      - '*.yml'
      - '*.json'
      - '*.config'
      - '*.md'
  workflow_run:
    workflows: ['Test Lib-Demo']
    types: [completed]
  workflow_dispatch:
    inputs: {}

concurrency:
  group: 'release-library'
  cancel-in-progress: true

env:
  ARTIFACT_NAME: 'build-lib-artifact'

jobs:
  build:
    if: |
      github.ref == 'refs/heads/main' &&
      github.event.repository.fork == false
    runs-on: ubuntu-latest
    environment: FSI_DEP_NodeJs
    strategy:
      matrix:
        package:
          [
            abcdef,
            abyss,
            android-studio,
            andromeda,
            basic-dark,
            basic-light,
            forest,
            github-dark,
            github-light,
            gruvbox-dark,
            gruvbox-light,
            material-dark,
            material-light,
            monokai,
            nord,
            solarized-dark,
            solarized-light,
            tokyo-night-day,
            tokyo-night-storm,
            volcano,
            bundle
          ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js - Version ${{ vars.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org/'
          scope: ${{ vars.NPM_ORG }}
          always-auth: true

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build ${{ matrix.package }} package
        run: |
          cd packages/${{ matrix.package }}
          npm run prepare

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.package }}-build
          path: packages/${{ matrix.package }}/dist

  release:
    needs: build
    runs-on: ubuntu-latest
    environment: FSI_DEP_NodeJs
    strategy:
      matrix:
        package:
          [
            abcdef,
            abyss,
            android-studio,
            andromeda,
            basic-dark,
            basic-light,
            forest,
            github-dark,
            github-light,
            gruvbox-dark,
            gruvbox-light,
            material-dark,
            material-light,
            monokai,
            nord,
            solarized-dark,
            solarized-light,
            tokyo-night-day,
            tokyo-night-storm,
            volcano,
            bundle
          ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.package }}-build
          path: packages/${{ matrix.package }}/dist

      # List all files in the dist folder
      - name: List files in dist folder
        run: |
          ls -a packages/${{ matrix.package }}
          ls -R packages/${{ matrix.package }}/dist

      - name: Set up Node.js - Version ${{ vars.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org/'
          scope: ${{ vars.NPM_ORG }}
          always-auth: true

      - name: Release to NPM registry ðŸš€
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd packages/${{ matrix.package }}
          npm publish --access public || echo "Package already published in NPM, skipping..."

      - name: Set up Node.js for GitHub registry
        uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.NODE_VERSION }}
          registry-url: 'https://npm.pkg.github.com/'
          scope: ${{ vars.NPM_ORG }}
          always-auth: true

      - name: Release to GitHub NPM registry ðŸš€
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_GH_TOKEN }}
        run: |
          cd packages/${{ matrix.package }}
          npm publish || echo "Package already published in GitHub NPM, skipping..."
